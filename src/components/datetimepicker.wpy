<style lang="less">
  .picker {
    .placeholder {
      color: #999;
    }

    .icon-clear {
      width: 32rpx;
      height: 32rpx;
      margin-right: 10rpx;
    }
  }
</style>

<template>
  <picker mode="{{mode}}"
          @change="change"
          value="{{value}}"
          start="{{start}}"
          end="{{end}}"
          fields="{{fields}}"
          class="{{disabled ? 'disabled' : ''}}"
          disabled="{{disabled}}"
  >
    <view class="picker {{size}} {{className}}" style="{{style}}">
      <text class="placeholder" wx:if="{{placeholder && value === ''}}">{{placeholder}}</text>
      <text>{{value}}</text>
      <view>
        <image class="icon-clear" wx:if="{{showClear && value !== ''}}" src="../images/close-gray.svg" @tap.stop="reset"></image>
        <icon name="angle-down-black.png"></icon>
      </view>
    </view>
  </picker>
</template>

<script>
  import wepy from 'wepy'
  import Icon from './icon'

  const coerce = (v) =>
    typeof v === 'string'
      ? JSON.parse(v)
      : v

  export default class Index extends wepy.component {
    props = {
      style: {
        type: String,
        default: ''
      },
      className: {
        type: String,
        default: ''
      },
      mode: {
        type: String,
        default: 'date'
      },
      size: {
        type: String,
        default: 'normal'
      },
      start: {
        type: String,
        default: ''
      },
      end: {
        type: String,
        default: ''
      },
      value: {
        type: String,
        default: ''
      },
      fields: {
        type: String,
        default: 'day'
      },
      disabled: {
        type: Boolean,
        default: false
      },
      showClear: {
        type: [Boolean, String],
        default: false,
        coerce
      },
      placeholder: String
    }

    components = {
      icon: Icon,
      iconclear: Icon
    }

    data = {
    }

    methods = {
      change (e) {
        this.value = e.detail.value
        this.$emit('change', e)
      },
      reset () {
        console.log(11111)
        this.value = ''
        this.$emit('change', {detail: {value: this.value}})
      }
    }
  }
</script>
