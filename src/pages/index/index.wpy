<style lang="less">
  .container{
    padding: 40rpx 0;
  }
  .panel {
    border-radius: 12rpx;
    background-color: #fff;
    margin-left: 20rpx;
    margin-right: 20rpx;
  }

  .panel-title {
    border-bottom: 2rpx solid #eee;
    padding: 20rpx 24rpx;
  }

  .panel-body{
    padding: 20rpx;
  }

  .code-item{
    padding: 10rpx 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
</style>
<template>
  <view class="container">
    <view>
      <view style="display: inline-block;">
        <button type="primary" @tap="scanCode">开始扫码</button>
      </view>
      <switch checked @change="switchChange" style="vertical-align: text-bottom;margin-left: 5px;"/>
      <text>是否连扫</text>
    </view>
  </view>
  <view class="panel">
    <view class="panel-title">二维码列表</view>
    <view class="panel-body">
      <repeat for="{{codeList}}" key="index">
        <view class="code-item">{{index+1}}: {{item}}</view>
      </repeat>
    </view>
  </view>
  <toast/>
</template>

<script>
  import wepy from 'wepy'
  import Toast from 'wepy-com-toast'
  import fetch from '../../service/fetch'
  import {showError, showToast} from '../../utils/util'
  import {uploadFile} from '../../utils/wechat'

  function parseDate (dateStr) {
    dateStr = String(dateStr)
    return dateStr.substring(0, 4) + '-' + dateStr.substring(4, 6) + '-' + dateStr.substring(6, dateStr.length)
  }

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '扫码测试'
    }

    components = {
      toast: Toast
    }

    data = {
      userInfo: {},
      codeList: [],
      continuity: true
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      toast (msg) {
        this.toast(msg)
      },
      scanCode () {
        this.launchScaner()
      },
      switchChange(e) {
        this.continuity = e.detail.value
      }
    }

    toast (msg) {
      return this.$invoke('toast', 'show', {
        title: msg,
        img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      })
    }

    addCode(result) {
      return new Promise((resolve, reject) => {
        /*if(this.codeList.includes(result)) {
          reject('该发票已扫描过')
        } else {*/
          this.addCodeList(result);
          if (this.codeList.length > 9) {
            resolve()
          } else {
            reject()
          }
        //}
      })
    }

    launchScaner () {
      wepy.scanCode()
        .then(res => {
          this.onBarcodeRead(res)
        })
        .catch(() => {
          wepy.showModal({
            title: '温馨提示',
            content: '二维码无法识别请拍摄发票',
            confirmText: '开始拍照',
            cancelText: '取消'
          }).then(res => {
            if (res.confirm) {
              this.startCapture()
            }
          })
        })
    }

    onBarcodeRead (e) {
      let isExpectQrcode = true
      let ret = e.result.split(',')
      if (ret.length < 3) {
        isExpectQrcode = false
      }
      else if (ret[2].length < 10) {
        isExpectQrcode = false
      }
      else if (ret[3].length < 8) {
        isExpectQrcode = false
      }

      if (isExpectQrcode) {
        if(!this.continuity) {
          wepy.showModal({
            title: '二维码识别成功',
            content: e.result,
            confirmText: '下一张',
            cancelText: '完成'
          }).then(res => {
            if (res.confirm) {
              this.uploadBarCode(e.result, false)
            } else if (res.cancel) {
              this.uploadBarCode(e.result, true)
            }
          });
        } else {
          this.addCode(e.result).then(() => {
            wepy.showModal({
              title: '',
              content: `已识别的发票达到${this.codeList.length}张，是否现在上传?`,
              confirmText: '是',
              cancelText: '否'
            }).then(res => {
              if (res.confirm) {
                this.uploadBarCode(this.codeList, false)
              } else if (res.cancel) {
                this.launchScaner();
              }
            })
          }).catch(msg => {
            if (msg) {
              showError(msg).then(() => {
                this.launchScaner()
              })
            } else {
              this.launchScaner()
            }
          })
        }
      } else {
        wepy.showModal({
          title: '二维码识别失败',
          content: '请扫描发票左上角二维码',
          confirmText: '重新扫描',
          cancelText: '取消'
        }).then(res => {
          if (res.confirm) {
            this.launchScaner()
          }
        })
      }
    }

    addCodeList(code){
      this.codeList.push(code)
      this.$apply()
    }

    resetCodeList(){
      this.codeList = []
      this.$apply()
    }

    _parseInvoiceInfo (data) {
      let codes = data.split(',')
      return {
        QR: true,
        qrDetail: data,
        invoiceType: (codes[0] === '01' && codes[1] === '01') ? '增值' : (codes[0] === '01' && codes[1] === '04' ? '普通' : ''),
        invoiceCode: codes[2],
        invoiceNumber: codes[3],
        invoicePrice: codes[4],
        issueDate: parseDate(codes[5]),
        correctCode: codes[6]
      }
    }

    uploadBarCode(data, goBack) {
      fetch.post('invoice-upload', this._parseInvoiceInfo(data)).then(res => {
        if (res.success) {
          showToast(res.message || '上传成功')
          this.resetCodeList()
          if (!goBack) {
            this.launchScaner()
          }
        } else {
          showError(res.message || '上传失败')
        }
      }, errMsg => {
        showError('上传失败，请重试')
      })
    }

    uploadBarCodeByPic (filePath, goBack) {
      let params = {
        QR: false
      }

      return uploadFile('invoice-upload', filePath, params).then(res => {
        if (res.success) {
          this.toast('上传成功')
          if (!goBack) {
            this.launchScaner()
          }
        } else {
          this.toast(res.message || '上传失败')
        }
      }, errMsg => {
        this.toast('上传失败, 请重试!')
      })
    }

    startCapture () {
      wepy.chooseImage({
        count: 1, // 默认9
        sizeType: ['compressed'],
        sourceType: ['camera']
      }).then(res => {
        let imgFilePath = res.tempFilePaths[0]
        wepy.showModal({
          title: '提示',
          content: '您已成功拍照',
          confirmText: '下一张',
          cancelText: '完成'
        }).then(res => {
          if (res.confirm) {
            this.uploadBarCodeByPic(imgFilePath, false)
          } else if (res.cancel) {
            this.uploadBarCodeByPic(imgFilePath, true)
          }
        })
      })
    }

    onLoad () {

    }
  }
</script>
