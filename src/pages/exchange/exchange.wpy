<style lang="less">
  @import "../../less/mixin";

  .top-message {
    .flex();
    padding: 20rpx;
    border: 4rpx solid #ddd;
    border-radius: 16rpx;
    background-color: #fff;
    margin: 20rpx;

    .icon {
      padding: 0;
      margin-right: 40rpx;
      margin-left: 20rpx;
    }

    .tmessage {
      flex: 1;
    }

    .tmsg-title {
      font-size: 32rpx;
    }
  }

  .exchange-listgroup {
    .flex();
    flex-direction: column;
    background-color: #fff;
    flex: 1;
    height: 100%;
    padding-bottom: 10rpx;
    box-sizing: border-box;
    overflow: hidden;
  }

  .exchange-list {
    flex: 1;
    height: 100%;
    padding-left: 20rpx;
    padding-right: 20rpx;
    overflow: auto;
  }

  .exchange-legend {
    position: relative;
    text-align: center;
    margin-bottom: 20rpx;

    &:before {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      top: 50%;
      margin-top: -2rpx;
      border-top: 4rpx solid #666;
    }

    > text {
      position: relative;
      display: inline-block;
      padding: 16rpx 20rpx;
      background-color: #fff;
      color: @gcolor;
      font-size: 36rpx;
      font-weight: bold;
    }
  }

  .page-actions {
    padding: 20rpx 40rpx;
    background-color: #fff;
    border-top: 2rpx solid #ccc;
    .flex-v-center();
    justify-content: space-between;
  }

  .cur-piont-label {
    color: @gcolor;
    margin-right: 40rpx;
  }

</style>
<template>
  <view class="top-message">
    <gifticon name="gift.svg" size="large"></gifticon>
    <view class="tmessage">
      <view class="tmsg-title">积分兑换详情</view>
      <view class="tmsg-bd">1、活动日期：当前至2018年12月底</view>
    </view>
  </view>

  <view class="exchange-listgroup">
    <view class="exchange-legend">
      <text>积分兑换区</text>
    </view>
    <scroll-view scroll-y="true" class="exchange-list">
      <block wx:for="{{list}}" wx:key="index">
        <view class="card-item">
          <image class="card-cover" src="{{item.cover}}" mode="aspectFit"></image>
          <view class="card-body">
            <view class="card-desc">
               {{item.desc}}
            </view>
            <view class="counter">
              <view class="counter-action" data-index="{{index}}" @tap="minus">
                <minusicon name="minus.svg" size="small"></minusicon>
              </view>
              <input type="number" class="count" data-index="{{index}}" value="{{item.num}}" @input="numChange" @blur="numBlur" />
              <view class="counter-action" data-index="{{index}}" @tap="plus">
                <plusicon name="plus.svg" size="small"></plusicon>
              </view>
            </view>
          </view>
        </view>
      </block>
    </scroll-view>
  </view>

  <view class="page-actions">
    <view class="cur-point-msg">
      <text class="cur-piont-label">当前积分</text>
      <text class="cur-piont-val">550</text>
    </view>
    <excbutton>确认兑换</excbutton>
  </view>

</template>

<script>
  import wepy from 'wepy'
  import fetch from '../../service/fetch'
  import Icon from '../../components/icon'
  import Button from '../../components/button'
  import Carditem from '../../components/carditem'
  import Counter from '../../components/counter'
  import {showError, showToast} from '../../utils/util'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '我的积分'
    }

    components = {
      gifticon: Icon,
      plusicon: Icon,
      minusicon: Icon,
      carditem: Carditem,
      excbutton: Button,
      counter: Counter
    }

    data = {
      list: [
        {
          cover: '../../images/card1.jpg',
          desc: '5元话费卡 100积分',
          num: 0
        },
        {
          cover: '../../images/card2.jpg',
          desc: '100元话费卡 1000积分',
          num: 0
        },
        {
          cover: '../../images/card3.jpg',
          desc: '50元京东卡 500积分',
          num: 0
        },
        {
          cover: '../../images/card4.jpg',
          desc: '300元京东卡 1000积分',
          num: 0
        }
      ]
    }

    computed = {
    }
    methods = {
      plus (e) {
        let index = e.currentTarget.dataset.index
        this.list[index].num++
      },
      minus (e) {
        let index = e.currentTarget.dataset.index
        this.list[index].num = Math.max(0, this.list[index].num - 1)
      },
      numChange (e) {
        let index = e.currentTarget.dataset.index
        let value = e.detail.value
        if (isNaN(value)) {
          value = 0
        }
        this.list[index].num = parseInt(value)
        this.setData({
          list: this.list
        })
      },
      numBlur (e) {
        let index = e.currentTarget.dataset.index
        let value = parseInt(e.detail.value)
        if (isNaN(value)) {
          value = 0
        }
        this.list[index].num = value
        this.setData({
          list: this.list
        })
      }
    }

    onLoad () {

    }
  }
</script>
