<style lang="less">
  @import "../../less/mixin";

  .list-item:first-child{
    background-color: #f8f8f8;
    margin-bottom: 0;
  }

  .list-item-text{
    flex: 1;
    font-size: 32rpx;
  }

  .record-item {
    .flex-v-center();
    padding: 30rpx;
    border-bottom: 2rpx solid #dedede;
    background-color: #fff;

    .record-desc {
      flex:1;
    }

    .record-score {
      width: 3em;
      margin-right: -20rpx;
    }

    &:before {
      content: "•";
      font-size: 50rpx;
      font-weight: bold;
      margin-right: 16rpx;
      line-height: 0.1;
    }
  }

  .records-scrollview {
    flex: 1;
    height: 100%;
    overflow: hidden;
  }

</style>
<template>
  <view class="point-listgroup">
    <repeat for="{{listgroup}}">
      <listitem :icon="item.icon">
        <view class="list-item-text">{{item.text}}</view>
      </listitem>
    </repeat>
  </view>

  <scroll-view scroll-y="true" class="records-scrollview" lower-threshold="0" bindscrolltolower="onEndReached">
    <view class="point-records" wx:if="{{dataList.length>0}}">
      <repeat for="{{dataList}}">
        <view class="record-item">
          <text class="record-desc">{{item.dateString}}{{item.typeString}}</text>
          <text class="record-score">{{item.scoreString}}</text>
        </view>
      </repeat>
    </view>
  </scroll-view>
</template>

<script>
  import wepy from 'wepy'
  import fetch from '../../service/fetch'
  import Listitem from '../../components/listitem'
  import {session} from '../../service/auth'
  import {showError, showToast, formatDate} from '../../utils/util'

  const SCORE_TYPES = {
    "scan": {
      name: '扫码',
      symbol: '+'
    },
    "20reward50": {
      name: '奖励',
      symbol: '+'
    },
    "exchange": {
      name: '兑换',
      symbol: '-'
    }
  };

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '积分管理'
    }

    components = {
      listitem: Listitem
    }

    page = 1

    data = {
      dataList: [],
      listgroup: [
        {
          icon: 'point.svg',
          text: '剩余积分：0积分',
          key: 'pointValue'
        }
      ]
    }

    computed = {

    }

    setPointValue (value) {
      this.listgroup[0].text = `剩余积分：${value}积分`
      this.$apply()
    }

    setRecords (list) {
      list.forEach(e => {
        e.dateString = formatDate(new Date(e.date), 'yyyy年MM月dd日')
        e.typeString = SCORE_TYPES[e.type] ? SCORE_TYPES[e.type].name : e.type
        e.scoreString = SCORE_TYPES[e.type] ? SCORE_TYPES[e.type].symbol + e.score : e.score
      })
      Array.prototype.push.apply(this.dataList, list)
      this.$apply()
    }

    queryUserPoint () {
      fetch.get('find/score').then(res => {
        if (res.success) {
          if (res.data) {
            this.setPointValue(res.data.userableScore)
          }
        } else {
          showError(res.message)
        }
      }, showError)
    }

    queryExcRecords () {
      let params = {
        page: this.page++,
        userId: session.get().user.id
      }
      fetch.get('find/scorelog', params).then(res => {
        if (res.success) {
          this.setRecords(res.data.docs)
        } else {
          showError(res.message)
        }
      }, showError)
    }

    onEndReached () {
      this.queryExcRecords()
    }

    onShow () {
      this.dataList = []
      this.page = 1
      this.queryUserPoint()
      this.queryExcRecords()
    }
  }
</script>
